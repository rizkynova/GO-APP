# Multi-stage build for Monitoring Stack
FROM alpine:latest AS base

# Install necessary packages
RUN apk add --no-cache curl wget

# Create monitoring user
RUN addgroup -g 1001 -S monitoring && \
    adduser -u 1001 -S monitoring -G monitoring

# Prometheus stage
FROM prom/prometheus:latest AS prometheus
USER root
COPY prometheus.yml /etc/prometheus/prometheus.yml
RUN chown -R nobody:nobody /etc/prometheus
USER nobody

# Grafana stage
FROM grafana/grafana:latest AS grafana
USER root
COPY grafana/dashboards/ /etc/grafana/provisioning/dashboards/
COPY grafana/datasources/ /etc/grafana/provisioning/datasources/
RUN chown -R grafana:grafana /etc/grafana/provisioning
USER grafana

# Alertmanager stage
FROM prom/alertmanager:latest AS alertmanager
USER root
COPY alertmanager/ /etc/alertmanager/
RUN chown -R nobody:nobody /etc/alertmanager
USER nobody

# Final stage - combine all services
FROM base AS final

# Copy configurations
COPY --from=prometheus /etc/prometheus /etc/prometheus
COPY --from=grafana /etc/grafana/provisioning /etc/grafana/provisioning
COPY --from=alertmanager /etc/alertmanager /etc/alertmanager

# Create startup script
RUN echo '#!/bin/sh' > /start-monitoring.sh && \
    echo 'echo "Starting monitoring stack..."' >> /start-monitoring.sh && \
    echo 'echo "Prometheus config: /etc/prometheus"' >> /start-monitoring.sh && \
    echo 'echo "Grafana config: /etc/grafana/provisioning"' >> /start-monitoring.sh && \
    echo 'echo "Alertmanager config: /etc/alertmanager"' >> /start-monitoring.sh && \
    echo 'echo "Monitoring stack configuration ready!"' >> /start-monitoring.sh && \
    chmod +x /start-monitoring.sh

# Switch to monitoring user
USER monitoring

# Expose ports
EXPOSE 9090 3000 9093

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:9090/-/healthy || exit 1

# Start monitoring stack
CMD ["/start-monitoring.sh"] 